{"version":3,"sources":["app.js","lists/lists.ctrl.js","login/login.ctrl.js","registration/registration.ctrl.js","common/services/auth.fctr.js","common/services/cards.fctr.js","common/services/list.fctr.js","common/services/test.fctr.js","common/directives/list/list.drv.js","common/directives/card/card.drv.js","common/directives/custom-focus/custom-focus.js"],"names":["configRouter","$locationProvider","$stateProvider","$urlRouterProvider","state","url","templateUrl","controller","controllerAs","when","otherwise","configRun","$rootScope","$state","$window","$on","event","toState","stateNames","name","split","document","body","className","length","angular","module","config","run","$inject","ListsPageController","ListService","createNewList","vm","newListTitle","newList","title","lists","push","setVisibleNewList","visibleNewList","removeList","filter","i","this","get","responce","LoginPageController","TestService","login","validate","save","text","console","log","submitted","email","password","RegistrationPageController","registration","go","greeting","AuthService","$resource","type","method","params","factory","id","listDirective","linkFunc","scope","elem","attrs","showNewCardInput","visibleNewCard","focusOn","createNewCard","data","cards","newCardsText","newCards","reload","directive","restrict","replace","link","cardDirective","customFocusDirective","$timeout","element","$watch","value","focus","trigger"],"mappings":"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","file":"main.min.js","sourcesContent":["(function() {\n\n  angular\n    .module('trelloProject', ['ui.router', 'ngResource', 'ui.tree', 'ngScrollable'])\n    .config(configRouter)\n    .run(configRun)\n\n    configRouter.$inject = ['$locationProvider', '$stateProvider', '$urlRouterProvider'];\n    function configRouter($locationProvider, $stateProvider, $urlRouterProvider){\n      $stateProvider\n        .state('home', {\n          url: '/',\n          templateUrl: './scripts/home/home.tpl.html'\n        })\n        .state('login',{\n          url: '/login',\n          templateUrl: './scripts/login/login.tpl.html',\n          controller: 'LoginPageController',\n          controllerAs: 'vm'\n        })\n        .state('registration',{\n          url: '/registation',\n          templateUrl: './scripts/registration/registration.tpl.html',\n          controller: 'RegistrationPageController',\n          controllerAs: 'vm'\n        })\n        .state('lists',{\n          url: '/lists',\n          templateUrl: './scripts/lists/lists.tpl.html',\n          controller: 'ListsPageController',\n          controllerAs: 'vm'\n        })\n        .state('notfound', {\n          url: '/404',\n          templateUrl: './scripts/404/404.tpl.html'\n        });\n\n      $urlRouterProvider.when('', '/');\n      $urlRouterProvider.otherwise('/404');\n      // $locationProvider.html5Mode({ enabled: true, requireBase: true }).hashPrefix('!');\n\n    }\n\n    configRun.$inject = ['$rootScope', '$state', '$window'];\n    function configRun($rootScope, $state, $window) {\n      $rootScope.$on('$stateChangeSuccess', function(event, toState){\n        var stateNames = toState.name.split('.');\n        document.body.className = stateNames[stateNames.length - 1] + '-page';\n      });\n    }\n})();\n","(function() {\n  'use strict';\n\n  angular\n    .module('trelloProject')\n    .controller('ListsPageController', ListsPageController);\n\n    ListsPageController.$inject = [\"ListService\"];\n    function ListsPageController(ListService) {\n      var vm = this;\n      vm.visibleNewList = false;\n      vm.createNewList = createNewList;\n      vm.setVisibleNewList = setVisibleNewList;\n      vm.removeList = removeList;\n\n      ListService.get(function(responce) {\n         vm.lists = responce.lists;\n      });\n\n\n      function createNewList() {\n        if (vm.newListTitle) {\n          var newList = {\n            title: vm.newListTitle\n          }\n\n          vm.lists.push(newList);\n        }\n      }\n\n      function setVisibleNewList() {\n        vm.visibleNewList = true;\n      }\n\n      function removeList(title) {\n        vm.lists = vm.lists.filter(function(i) {\n          return i.title !== title;\n        });\n      }\n    }\n})();\n","(function() {\n  'use strict';\n\n  angular\n    .module('trelloProject')\n    .controller('LoginPageController', LoginPageController);\n\n    LoginPageController.$inject = ['TestService'];\n    function LoginPageController(TestService) {\n      var vm = this;\n\n      vm.login = login;\n\n      function login(validate) {\n        TestService.save({}, { text: 'Im nigga, nigga' }, function (responce) {\n          console.log(responce)\n        });\n        vm.submitted = true;\n\n        if (validate) {\n          console.log(vm.email)\n          console.log(vm.password)\n          // alert(\"well done\");\n        }\n      }\n    }\n})();\n","(function() {\n  'use strict';\n\n  angular\n    .module('trelloProject')\n    .controller('RegistrationPageController', RegistrationPageController);\n\n    RegistrationPageController.$inject = [\"$state\"];\n    function RegistrationPageController($state) {\n      var vm = this;\n      vm.registration = registration;\n      vm.greeting = \"Hello world\";\n\n      function registration(validate) {\n        vm.submitted = true;\n\n        if (validate) {\n          $state.go('lists')\n        }\n      }\n\n    }\n})();\n","(function() {\n  'use strict';\n\n  angular\n    .module('trelloProject')\n    .factory('AuthService', AuthService);\n\n    AuthService.$inject = ['$resource'];\n    function AuthService($resource) {\n      return $resource('/auth/:type', {\n        type: '@type'\n      },\n      {\n        save: {\n          method: 'POST',\n          params: {\n            type: 'registration'\n          }\n        },\n        login: {\n          method: 'POST',\n          params: {\n            type: 'login'\n          }\n        }\n      });\n    }\n})();\n","(function() {\n  'use strict';\n\n  angular\n    .module('trelloProject')\n    .factory('ListService', ListService);\n\n    ListService.$inject = ['$resource'];\n    function ListService($resource) {\n      return $resource('/card/:id', {\n        id: '@id'\n      });\n    }\n})();\n","(function() {\n  'use strict';\n\n  angular\n    .module('trelloProject')\n    .factory('ListService', ListService);\n\n    ListService.$inject = ['$resource'];\n    function ListService($resource) {\n      return $resource('resource.json');\n    }\n})();\n","(function() {\n  'use strict';\n\n  angular\n    .module('trelloProject')\n    .factory('TestService', TestService);\n\n    TestService.$inject = ['$resource'];\n    function TestService($resource) {\n      return $resource('/start/what');\n    }\n})();\n","(function() {\n  'use strict';\n\n  angular\n    .module('trelloProject')\n    .directive('list', listDirective);\n\n    function listDirective() {\n      var directive = {\n        restrict: 'E',\n        replace: true,\n        scope: {\n          data: '=',\n          reload: '&'\n        },\n        templateUrl: './scripts/common/directives/list/list.tpl.html',\n        link: linkFunc\n      }\n\n      return directive;\n\n      function linkFunc(scope, elem, attrs) {\n        scope.visibleNewCard = false;\n        scope.createNewCard = createNewCard;\n        scope.showNewCardInput = showNewCardInput;\n        scope.removeList = removeList;\n\n        function showNewCardInput() {\n          scope.visibleNewCard = true;\n          scope.focusOn = true;\n        }\n\n        function createNewCard() {\n\n          console.log(scope.data.cards)\n          console.log(scope.newCardsText)\n          if (scope.newCardsText) {\n            var newCards = {\n              text: scope.newCardsText\n            }\n\n            scope.data.cards.push(newCards);\n            scope.focusOn = true;\n            scope.newCardsText = null;\n          }\n        }\n\n        function removeList() {\n          scope.reload({ title: scope.data.title });\n        }\n      }\n    }\n})();\n","(function() {\n  'use strict';\n\n  angular\n    .module('trelloProject')\n    .directive('card', cardDirective);\n\n    function cardDirective() {\n      var directive = {\n        restrict: 'E',\n        replace: true,\n        scope: {\n          data:\"=\"\n        },\n        templateUrl: './scripts/common/directives/card/card.tpl.html',\n        link: linkFunc\n      }\n\n      return directive;\n\n      function linkFunc(scope, elem, attrs) {\n\n      }\n    }\n})();\n","(function() {\n\n'use strict';\n\n  angular\n    .module('trelloProject')\n    .directive('customFocus', customFocusDirective)\n\n    customFocusDirective.$inject = ['$timeout'];\n    function customFocusDirective($timeout) {\n      var directive = {\n        restrict: 'A',\n        scope: {\n          trigger: '=customFocus'\n        },\n        link: linkFunc\n      }\n\n      return directive;\n\n      function linkFunc(scope, element, attrs) {\n        scope.$watch('trigger', function(value) {\n        if (value) {\n          $timeout(function() {\n            element[0].focus();\n            scope.trigger = false;\n          });\n        }\n      });\n      }\n    }\n\n}());\n"],"sourceRoot":"/source/"}