{"version":3,"sources":["app.js","login/login.ctrl.js","main/main.ctrl.js","registration/registration.ctrl.js","common/services/auth.fctr.js","common/services/cards.fctr.js","common/services/list.fctr.js","common/services/test.fctr.js","main/lists/lists.ctrl.js","main/profile/profile.ctrl.js","common/directives/card/card.drv.js","common/directives/click-outside/click-outside.drv.js","common/directives/custom-focus/custom-focus.js","common/directives/list/list.drv.js","common/directives/on-finish-render/on-finish-render.drv.js"],"names":["configRouter","$locationProvider","$stateProvider","$urlRouterProvider","state","url","templateUrl","controller","controllerAs","abstract","when","otherwise","configRun","$rootScope","$state","$window","$on","event","toState","stateNames","name","split","document","body","className","length","angular","module","config","run","$inject","LoginPageController","TestService","login","validate","save","text","responce","console","log","vm","submitted","email","password","this","MainPageController","closeDropdown","showDropdown","RegistrationPageController","registration","go","greeting","AuthService","$resource","type","method","params","factory","ListService","id","ListsPageController","$scope","createNewList","newListTitle","newList","title","cards","lists","push","focusOn","setResizeScroll","setVisibleNewList","visibleNewList","removeList","filter","i","widthAllElemet","querySelector","style","width","$broadcast","listOptions","accept","sourceNodeScope","destNodesScope","destIndex","list","$element","hasClass","listPlaceholder","card","cardPlaceholder","get","ProfilePageController","username","avatar","cardDirective","linkFunc","scope","elem","attrs","directive","restrict","replace","data","link","clickOutsideDirective","$document","$parse","element","fn","eventHandler","childElement","contains","target","$apply","on","off","customFocusDirective","$timeout","$watch","value","focus","trigger","listDirective","reload","listController","bindToController","showNewCardInput","visibleNewCard","createNewCard","newCardsText","newCards","onFinishRender","$last","$emit"],"mappings":"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","file":"main.min.js","sourcesContent":["(function() {\n\n  angular\n    .module('trelloProject', ['ui.router', 'ngResource', 'ui.tree', 'ngScrollable'])\n    .config(configRouter)\n    .run(configRun)\n\n    configRouter.$inject = ['$locationProvider', '$stateProvider', '$urlRouterProvider'];\n    function configRouter($locationProvider, $stateProvider, $urlRouterProvider){\n      $stateProvider\n        .state('home', {\n          url: '/',\n          templateUrl: './scripts/home/home.tpl.html'\n        })\n        .state('login',{\n          url: '/login',\n          templateUrl: './scripts/login/login.tpl.html',\n          controller: 'LoginPageController',\n          controllerAs: 'vm'\n        })\n        .state('registration',{\n          url: '/registation',\n          templateUrl: './scripts/registration/registration.tpl.html',\n          controller: 'RegistrationPageController',\n          controllerAs: 'vm'\n        })\n        .state(\"main\", {\n          url: \"\",\n          abstract: true,\n          templateUrl: './scripts/main/main.tpl.html',\n          controller: 'MainPageController',\n          controllerAs: 'vm'\n        })\n        .state('main.lists',{\n          url: '/lists',\n          templateUrl: './scripts/main/lists/lists.tpl.html',\n          controller: 'ListsPageController',\n          controllerAs: 'vm'\n        })\n        .state('main.profile',{\n          url: '/profile',\n          templateUrl: './scripts/main/profile/profile.tpl.html',\n          controller: 'ProfilePageController',\n          controllerAs: 'vm'\n        })\n        .state('notfound', {\n          url: '/404',\n          templateUrl: './scripts/404/404.tpl.html'\n        });\n\n      $urlRouterProvider.when('', '/');\n      $urlRouterProvider.otherwise('/404');\n      // $locationProvider.html5Mode({ enabled: true, requireBase: true }).hashPrefix('!');\n\n    }\n\n    configRun.$inject = ['$rootScope', '$state', '$window'];\n    function configRun($rootScope, $state, $window) {\n      $rootScope.$on('$stateChangeSuccess', function(event, toState){\n        var stateNames = toState.name.split('.');\n        document.body.className = stateNames[stateNames.length - 1] + '-page';\n      });\n    }\n})();\n","(function() {\n  'use strict';\n\n  angular\n    .module('trelloProject')\n    .controller('LoginPageController', LoginPageController);\n\n    LoginPageController.$inject = ['TestService'];\n    function LoginPageController(TestService) {\n      var vm = this;\n\n      vm.login = login;\n\n      function login(validate) {\n        TestService.save({}, { text: 'Im nigga, nigga' }, function (responce) {\n          console.log(responce)\n        });\n        vm.submitted = true;\n\n        if (validate) {\n          console.log(vm.email)\n          console.log(vm.password)\n          // alert(\"well done\");\n        }\n      }\n    }\n})();\n","(function() {\n  'use strict';\n\n  angular\n    .module('trelloProject')\n    .controller('MainPageController', MainPageController);\n\n    function MainPageController() {\n      var vm = this;\n      vm.showDropdown = false;\n      vm.closeDropdown = closeDropdown;\n\n      function closeDropdown() {\n        vm.showDropdown = false;\n      }\n    }\n\n})();\n","(function() {\n  'use strict';\n\n  angular\n    .module('trelloProject')\n    .controller('RegistrationPageController', RegistrationPageController);\n\n    RegistrationPageController.$inject = [\"$state\"];\n    function RegistrationPageController($state) {\n      var vm = this;\n      vm.registration = registration;\n      vm.greeting = \"Hello world\";\n\n      function registration(validate) {\n        vm.submitted = true;\n\n        if (validate) {\n          $state.go('main.lists')\n        }\n      }\n\n    }\n})();\n","(function() {\n  'use strict';\n\n  angular\n    .module('trelloProject')\n    .factory('AuthService', AuthService);\n\n    AuthService.$inject = ['$resource'];\n    function AuthService($resource) {\n      return $resource('/auth/:type', {\n        type: '@type'\n      },\n      {\n        save: {\n          method: 'POST',\n          params: {\n            type: 'registration'\n          }\n        },\n        login: {\n          method: 'POST',\n          params: {\n            type: 'login'\n          }\n        }\n      });\n    }\n})();\n","(function() {\n  'use strict';\n\n  angular\n    .module('trelloProject')\n    .factory('ListService', ListService);\n\n    ListService.$inject = ['$resource'];\n    function ListService($resource) {\n      return $resource('/card/:id', {\n        id: '@id'\n      });\n    }\n})();\n","(function() {\n  'use strict';\n\n  angular\n    .module('trelloProject')\n    .factory('ListService', ListService);\n\n    ListService.$inject = ['$resource'];\n    function ListService($resource) {\n      return $resource('resource.json');\n    }\n})();\n","(function() {\n  'use strict';\n\n  angular\n    .module('trelloProject')\n    .factory('TestService', TestService);\n\n    TestService.$inject = ['$resource'];\n    function TestService($resource) {\n      return $resource('/start/what');\n    }\n})();\n","(function() {\n  'use strict';\n\n  angular\n    .module('trelloProject')\n    .controller('ListsPageController', ListsPageController);\n\n    ListsPageController.$inject = [\"$scope\", \"ListService\"];\n    function ListsPageController($scope, ListService) {\n      var vm = this;\n      vm.visibleNewList = false;\n      vm.createNewList = createNewList;\n      vm.setVisibleNewList = setVisibleNewList;\n      vm.removeList = removeList;\n\n      $scope.listOptions = {\n        accept: function(sourceNodeScope, destNodesScope, destIndex) {\n          var list = sourceNodeScope.$element.hasClass(\"list__wrapper\");\n          var listPlaceholder = destNodesScope.$element.hasClass(\"list__placeholder\");\n          var card = sourceNodeScope.$element.hasClass(\"list__card\");\n          var cardPlaceholder = destNodesScope.$element.hasClass(\"card__placeholder\");\n\n          if (list === listPlaceholder) {\n            return true;\n          } if (card === cardPlaceholder) {\n            return true;\n          }\n        }\n      }\n\n      // $scope.$on('ngRepeatFinished', function(ngRepeatFinishedEvent) {\n      //   // $scope.$broadcast('content.reload');\n      //   // $scope.$broadcast('content.changed');\n      // });\n\n      ListService.get(function(responce) {\n        vm.lists = responce.lists;\n        setResizeScroll();\n      });\n\n      function createNewList() {\n        if (vm.newListTitle) {\n          var newList = {\n            title: vm.newListTitle,\n            cards: []\n          }\n\n          vm.lists.push(newList);\n          vm.focusOn = true;\n          vm.newListTitle = null;\n          setResizeScroll();\n        }\n      }\n\n      function setVisibleNewList() {\n        vm.visibleNewList = true;\n        vm.focusOn = true;\n      }\n\n      function removeList(title) {\n        vm.lists = vm.lists.filter(function(i) {\n          return i.title !== title;\n        });\n      }\n\n      function setResizeScroll() {\n        var widthAllElemet = (vm.lists.length + 1) * 290;\n        document.querySelector('.lists__wrapper').style.width = widthAllElemet + 'px';\n        $scope.$broadcast('content.changed');\n      }\n    }\n})();\n","(function() {\n  'use strict';\n\n  angular\n    .module('trelloProject')\n    .controller('ProfilePageController', ProfilePageController);\n\n    ProfilePageController.$inject = ['ListService']\n    function ProfilePageController(ListService) {\n      var vm = this;\n\n      ListService.get(function(responce) {\n        vm.username = responce.name;\n        vm.email = responce.email;\n        vm.avatar = responce.avatar;\n      });\n\n    }\n\n})();\n","(function() {\n  'use strict';\n\n  angular\n    .module('trelloProject')\n    .directive('card', cardDirective);\n\n    function cardDirective() {\n      var directive = {\n        restrict: 'E',\n        replace: true,\n        scope: {\n          data:\"=\"\n        },\n        templateUrl: './scripts/common/directives/card/card.tpl.html',\n        link: linkFunc\n      }\n\n      return directive;\n\n      function linkFunc(scope, elem, attrs) {\n\n      }\n    }\n})();\n","/**\n * This directive close dropdown by click on any other element\n */\n(function() {\n  \"use strict\";\n\n  angular\n    .module(\"trelloProject\")\n    .directive(\"clickOutside\", clickOutsideDirective);\n\n    clickOutsideDirective.$inject = [\"$document\", \"$parse\"];\n    function clickOutsideDirective($document, $parse) {\n      var directive = {\n        restrict: \"A\",\n        link: linkFunc\n      }\n\n      return directive;\n\n      function linkFunc(scope, element, attrs) {\n        var fn = $parse(attrs['clickOutside']);\n\n        var eventHandler = function(event){\n\n          // any child element in directive elem\n          var childElement = element[0].contains(event.target);\n\n          if (!event || !event.target) {\n              return;\n          }\n\n          if (childElement) {\n            return;\n          }\n\n          return scope.$apply(function () {\n              return fn(scope);\n          });\n        }\n\n        $document.on(\"click\", eventHandler);\n\n        scope.$on(\"$destroy\", function() {\n          $document.off(\"click\", eventHandler);\n        });\n      }\n    }\n})();\n","(function() {\n\n'use strict';\n\n  angular\n    .module('trelloProject')\n    .directive('customFocus', customFocusDirective)\n\n    customFocusDirective.$inject = ['$timeout'];\n    function customFocusDirective($timeout) {\n      var directive = {\n        restrict: 'A',\n        scope: {\n          trigger: '=customFocus'\n        },\n        link: linkFunc\n      }\n\n      return directive;\n\n      function linkFunc(scope, element, attrs) {\n        scope.$watch('trigger', function(value) {\n        if (value) {\n          $timeout(function() {\n            element[0].focus();\n            scope.trigger = false;\n          });\n        }\n      });\n      }\n    }\n\n}());\n","(function() {\n  'use strict';\n\n  angular\n    .module('trelloProject')\n    .directive('list', listDirective);\n\n    function listDirective() {\n      var directive = {\n        restrict: 'E',\n        replace: true,\n        scope: {\n          data: '=',\n          reload: '&'\n        },\n        templateUrl: './scripts/common/directives/list/list.tpl.html',\n        controller: listController,\n        controllerAs: 'vm',\n        bindToController: true\n\n      }\n\n      return directive;\n\n    }\n\n    function listController() {\n      var vm = this;\n\n      vm.visibleNewCard = false;\n      vm.closeDropdown = closeDropdown;\n      vm.createNewCard = createNewCard;\n      vm.showNewCardInput = showNewCardInput;\n      vm.removeList = removeList;\n\n\n      function closeDropdown() {\n        vm.showDropdown = false;\n      }\n\n      function showNewCardInput() {\n        vm.visibleNewCard = true;\n        vm.focusOn = true;\n      }\n\n      function removeList() {\n        vm.reload({ title: vm.data.title });\n      }\n\n\n      function createNewCard() {\n        if (vm.newCardsText) {\n          var newCards = {\n            text: vm.newCardsText\n          }\n\n          vm.data.cards.push(newCards);\n          vm.focusOn = true;\n          vm.newCardsText = null;\n        }\n      }\n    }\n})();\n","(function() {\n\n'use strict';\n\n  angular\n    .module('trelloProject')\n    .directive('onFinishRender', onFinishRender)\n\n    onFinishRender.$inject = ['$timeout'];\n    function onFinishRender($timeout) {\n      var directive = {\n        restrict: 'A',\n        link: linkFunc\n      }\n\n      return directive;\n\n      function linkFunc(scope, element, attrs) {\n        if (scope.$last === true) {\n          $timeout(function () {\n            scope.$emit('ngRepeatFinished');\n          });\n        }\n      }\n    }\n\n}());\n"],"sourceRoot":"/source/"}