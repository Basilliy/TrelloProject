{"version":3,"sources":["app.js","lists/lists.ctrl.js","registration/registration.ctrl.js","login/login.ctrl.js","common/services/auth.fctr.js","common/services/cards.fctr.js","common/services/list.fctr.js","common/directives/list/list.drv.js","common/directives/card/card.drv.js","common/directives/custom-focus/custom-focus.js"],"names":["configRouter","$locationProvider","$stateProvider","$urlRouterProvider","state","url","templateUrl","controller","controllerAs","when","otherwise","configRun","$rootScope","$state","$window","$on","event","toState","stateNames","name","split","document","body","className","length","angular","module","config","run","$inject","ListsPageController","setVisibleNewList","vm","visibleNewList","createNewList","newListTitle","listsTitle","push","this","RegistrationPageController","registration","validate","submitted","go","greeting","LoginPageController","login","console","log","email","password","alert","AuthService","$resource","type","save","method","params","factory","ListService","id","listDirective","linkFunc","scope","elem","attrs","showNewCardInput","visibleNewCard","focusOn","createNewCard","newCardsText","text","directive","restrict","replace","data","link","cardDirective","customFocusDirective","$timeout","element","$watch","value","focus","trigger"],"mappings":"CAAA,WAQA,QAAAA,GAAAC,EAAAC,EAAAC,GACAD,EACAE,MAAA,QACAC,IAAA,IACAC,YAAA,iCAEAF,MAAA,SACAC,IAAA,SACAC,YAAA,iCACAC,WAAA,sBACAC,aAAA,OAEAJ,MAAA,gBACAC,IAAA,eACAC,YAAA,+CACAC,WAAA,6BACAC,aAAA,OAEAJ,MAAA,SACAC,IAAA,SACAC,YAAA,iCACAC,WAAA,sBACAC,aAAA,OAEAJ,MAAA,YACAC,IAAA,OACAC,YAAA,+BAGAH,EAAAM,KAAA,GAAA,KACAN,EAAAO,UAAA,QAMA,QAAAC,GAAAC,EAAAC,EAAAC,GACAF,EAAAG,IAAA,sBAAA,SAAAC,EAAAC,GACA,GAAAC,GAAAD,EAAAE,KAAAC,MAAA,IACAC,UAAAC,KAAAC,UAAAL,EAAAA,EAAAM,OAAA,GAAA,UA7CAC,QACAC,OAAA,iBAAA,YAAA,aAAA,iBACAC,OAAA3B,GACA4B,IAAAjB,GAEAX,EAAA6B,SAAA,oBAAA,iBAAA,sBAoCAlB,EAAAkB,SAAA,aAAA,SAAA,cC3CA,WACA,YAMA,SAAAC,KAOA,QAAAC,KACAC,EAAAC,gBAAA,EAGA,QAAAC,KACAF,EAAAG,cACAH,EAAAI,WAAAC,KAAAL,EAAAG,cAZA,GAAAH,GAAAM,IACAN,GAAAI,YAAA,QAAA,aAAA,iDAAA,oBACAJ,EAAAC,gBAAA,EACAD,EAAAD,kBAAAA,EACAC,EAAAE,cAAAA,EATAT,QACAC,OAAA,iBACAnB,WAAA,sBAAAuB,MCLA,WACA,YAOA,SAAAS,GAAA1B,GAKA,QAAA2B,GAAAC,GACAT,EAAAU,WAAA,EAEAD,GACA5B,EAAA8B,GAAA,SARA,GAAAX,GAAAM,IACAN,GAAAQ,aAAAA,EACAR,EAAAY,SAAA,cARAnB,QACAC,OAAA,iBACAnB,WAAA,6BAAAgC,GAEAA,EAAAV,SAAA,aCPA,WACA,YAMA,SAAAgB,KAKA,QAAAC,GAAAL,GACAT,EAAAU,WAAA,EAEAD,IACAM,QAAAC,IAAAhB,EAAAiB,OACAF,QAAAC,IAAAhB,EAAAkB,UACAC,MAAA,cAVA,GAAAnB,GAAAM,IAEAN,GAAAc,MAAAA,EAPArB,QACAC,OAAA,iBACAnB,WAAA,sBAAAsC,MCLA,WACA,YAOA,SAAAO,GAAAC,GACA,MAAAA,GAAA,eACAC,KAAA,UAGAC,MACAC,OAAA,OACAC,QACAH,KAAA,iBAGAR,OACAU,OAAA,OACAC,QACAH,KAAA,YAnBA7B,QACAC,OAAA,iBACAgC,QAAA,cAAAN,GAEAA,EAAAvB,SAAA,gBCPA,WACA,YAOA,SAAA8B,GAAAN,GACA,MAAAA,GAAA,aACAO,GAAA,QAPAnC,QACAC,OAAA,iBACAgC,QAAA,cAAAC,GAEAA,EAAA9B,SAAA,gBCPA,WACA,YAOA,SAAA8B,GAAAN,GACA,MAAAA,GAAA,aACAO,GAAA,QAPAnC,QACAC,OAAA,iBACAgC,QAAA,cAAAC,GAEAA,EAAA9B,SAAA,gBCPA,WACA,YAMA,SAAAgC,KAaA,QAAAC,GAAAC,EAAAC,EAAAC,GASA,QAAAC,KACAH,EAAAI,gBAAA,EACAJ,EAAAK,SAAA,EAGA,QAAAC,KACAN,EAAAO,eACAP,EAAAQ,KAAAlC,KAAA0B,EAAAO,cACAP,EAAAK,SAAA,EACAL,EAAAO,aAAA,MAjBAP,EAAAQ,MAAA,kEACA,sGACA,wFAEAR,EAAAI,gBAAA,EACAJ,EAAAM,cAAAA,EACAN,EAAAG,iBAAAA,EAnBA,GAAAM,IACAC,SAAA,IACAC,SAAA,EACAX,OACAY,KAAA,KAEArE,YAAA,iDACAsE,KAAAd,EAGA,OAAAU,GAfA/C,QACAC,OAAA,iBACA8C,UAAA,OAAAX,MCLA,WACA,YAMA,SAAAgB,KAaA,QAAAf,GAAAC,EAAAC,EAAAC,IAZA,GAAAO,IACAC,SAAA,IACAC,SAAA,EACAX,OACAY,KAAA,KAEArE,YAAA,iDACAsE,KAAAd,EAGA,OAAAU,GAfA/C,QACAC,OAAA,iBACA8C,UAAA,OAAAK,MCLA,WAEA,YAOA,SAAAC,GAAAC,GAWA,QAAAjB,GAAAC,EAAAiB,EAAAf,GACAF,EAAAkB,OAAA,UAAA,SAAAC,GACAA,GACAH,EAAA,WACAC,EAAA,GAAAG,QACApB,EAAAqB,SAAA,MAfA,GAAAZ,IACAC,SAAA,IACAV,OACAqB,QAAA,gBAEAR,KAAAd,EAGA,OAAAU,GAdA/C,QACAC,OAAA,iBACA8C,UAAA,cAAAM,GAEAA,EAAAjD,SAAA","file":"main.min.js","sourcesContent":["(function() {\n\n  angular\n    .module('trelloProject', ['ui.router', 'ngResource', 'ngScrollable'])\n    .config(configRouter)\n    .run(configRun)\n\n    configRouter.$inject = ['$locationProvider', '$stateProvider', '$urlRouterProvider'];\n    function configRouter($locationProvider, $stateProvider, $urlRouterProvider){\n      $stateProvider\n        .state('home', {\n          url: '/',\n          templateUrl: './scripts/home/home.tpl.html'\n        })\n        .state('login',{\n          url: '/login',\n          templateUrl: './scripts/login/login.tpl.html',\n          controller: 'LoginPageController',\n          controllerAs: 'vm'\n        })\n        .state('registration',{\n          url: '/registation',\n          templateUrl: './scripts/registration/registration.tpl.html',\n          controller: 'RegistrationPageController',\n          controllerAs: 'vm'\n        })\n        .state('lists',{\n          url: '/lists',\n          templateUrl: './scripts/lists/lists.tpl.html',\n          controller: 'ListsPageController',\n          controllerAs: 'vm'\n        })\n        .state('notfound', {\n          url: '/404',\n          templateUrl: './scripts/404/404.tpl.html'\n        });\n\n      $urlRouterProvider.when('', '/');\n      $urlRouterProvider.otherwise('/404');\n      // $locationProvider.html5Mode({ enabled: true, requireBase: true }).hashPrefix('!');\n\n    }\n\n    configRun.$inject = ['$rootScope', '$state', '$window'];\n    function configRun($rootScope, $state, $window) {\n      $rootScope.$on('$stateChangeSuccess', function(event, toState){\n        var stateNames = toState.name.split('.');\n        document.body.className = stateNames[stateNames.length - 1] + '-page';\n      });\n    }\n})();\n","(function() {\n  'use strict';\n\n  angular\n    .module('trelloProject')\n    .controller('ListsPageController', ListsPageController);\n\n    function ListsPageController() {\n      var vm = this;\n      vm.listsTitle = ['Inbox', 'First list', 'Second list tararar tutu im a crazy train tyty', 'Another yet list'];\n      vm.visibleNewList = false;\n      vm.setVisibleNewList = setVisibleNewList;\n      vm.createNewList = createNewList;\n\n      function setVisibleNewList() {\n        vm.visibleNewList = true;\n      }\n\n      function createNewList() {\n        if (vm.newListTitle) {\n          vm.listsTitle.push(vm.newListTitle);\n        }\n      }\n    }\n})();\n","(function() {\n  'use strict';\n\n  angular\n    .module('trelloProject')\n    .controller('RegistrationPageController', RegistrationPageController);\n\n    RegistrationPageController.$inject = [\"$state\"];\n    function RegistrationPageController($state) {\n      var vm = this;\n      vm.registration = registration;\n      vm.greeting = \"Hello world\";\n\n      function registration(validate) {\n        vm.submitted = true;\n\n        if (validate) {\n          $state.go('lists')\n        }\n      }\n\n    }\n})();\n","(function() {\n  'use strict';\n\n  angular\n    .module('trelloProject')\n    .controller('LoginPageController', LoginPageController);\n\n    function LoginPageController() {\n      var vm = this;\n\n      vm.login = login;\n\n      function login(validate) {\n        vm.submitted = true;\n\n        if (validate) {\n          console.log(vm.email)\n          console.log(vm.password)\n          alert(\"well done\");\n        }\n      }\n    }\n})();\n","(function() {\n  'use strict';\n\n  angular\n    .module('trelloProject')\n    .factory('AuthService', AuthService);\n\n    AuthService.$inject = ['$resource'];\n    function AuthService($resource) {\n      return $resource('/auth/:type', {\n        type: '@type'\n      },\n      {\n        save: {\n          method: 'POST',\n          params: {\n            type: 'registration'\n          }\n        },\n        login: {\n          method: 'POST',\n          params: {\n            type: 'login'\n          }\n        }\n      });\n    }\n})();\n","(function() {\n  'use strict';\n\n  angular\n    .module('trelloProject')\n    .factory('ListService', ListService);\n\n    ListService.$inject = ['$resource'];\n    function ListService($resource) {\n      return $resource('/card/:id', {\n        id: '@id'\n      });\n    }\n})();\n","(function() {\n  'use strict';\n\n  angular\n    .module('trelloProject')\n    .factory('ListService', ListService);\n\n    ListService.$inject = ['$resource'];\n    function ListService($resource) {\n      return $resource('/list/:id', {\n        id: '@id'\n      });\n    }\n})();\n","(function() {\n  'use strict';\n\n  angular\n    .module('trelloProject')\n    .directive('list', listDirective);\n\n    function listDirective() {\n      var directive = {\n        restrict: 'E',\n        replace: true,\n        scope: {\n          data: \"=\"\n        },\n        templateUrl: './scripts/common/directives/list/list.tpl.html',\n        link: linkFunc\n      }\n\n      return directive;\n\n      function linkFunc(scope, elem, attrs) {\n        scope.text = ['Polar bears can eat as many as 86 penguins in a single sitting.',\n        'The top six foods that make your fart are beans, corn, bell peppers, cauliflower, cabbage and milk!',\n        'Alcohol activates and stimulates the same part of the brain associated with honesty.'];\n\n        scope.visibleNewCard = false;\n        scope.createNewCard = createNewCard;\n        scope.showNewCardInput = showNewCardInput;\n\n        function showNewCardInput() {\n          scope.visibleNewCard = true;\n          scope.focusOn = true;\n        }\n\n        function createNewCard() {\n          if (scope.newCardsText) {\n            scope.text.push(scope.newCardsText);\n            scope.focusOn = true;\n            scope.newCardsText = null;\n\n          }\n        }\n      }\n    }\n})();\n","(function() {\n  'use strict';\n\n  angular\n    .module('trelloProject')\n    .directive('card', cardDirective);\n\n    function cardDirective() {\n      var directive = {\n        restrict: 'E',\n        replace: true,\n        scope: {\n          data:\"=\"\n        },\n        templateUrl: './scripts/common/directives/card/card.tpl.html',\n        link: linkFunc\n      }\n\n      return directive;\n\n      function linkFunc(scope, elem, attrs) {\n\n      }\n    }\n})();\n","(function() {\n\n'use strict';\n\n  angular\n    .module('trelloProject')\n    .directive('customFocus', customFocusDirective)\n\n    customFocusDirective.$inject = ['$timeout'];\n    function customFocusDirective($timeout) {\n      var directive = {\n        restrict: 'A',\n        scope: {\n          trigger: '=customFocus'\n        },\n        link: linkFunc\n      }\n\n      return directive;\n\n      function linkFunc(scope, element, attrs) {\n        scope.$watch('trigger', function(value) {\n        if (value) {\n          $timeout(function() {\n            element[0].focus();\n            scope.trigger = false;\n          });\n        }\n      });\n      }\n    }\n\n}());\n"],"sourceRoot":"/source/"}